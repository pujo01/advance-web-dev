'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = withForm;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _redux = require('redux');

var _reducer = require('./reducer');

var _reducer2 = _interopRequireDefault(_reducer);

var _enhancer = require('./enhancer');

var _enhancer2 = _interopRequireDefault(_enhancer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function withForm(initialState) {
  var reducer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _reducer2.default;
  var enhancer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _enhancer2.default)();

  return function (BaseComponent) {
    var WrappedComponent = function (_PureComponent) {
      _inherits(WrappedComponent, _PureComponent);

      function WrappedComponent() {
        _classCallCheck(this, WrappedComponent);

        return _possibleConstructorReturn(this, (WrappedComponent.__proto__ || Object.getPrototypeOf(WrappedComponent)).apply(this, arguments));
      }

      _createClass(WrappedComponent, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
          var state = typeof initialState === 'function' ? initialState(this.props) : initialState;

          this.form = (0, _redux.createStore)(reducer, state, enhancer);
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.form.unsubscribe();
          this.form = null;
        }
      }, {
        key: 'render',
        value: function render() {
          return _react2.default.createElement(BaseComponent, _extends({}, this.props, { form: this.form }));
        }
      }]);

      return WrappedComponent;
    }(_react.PureComponent);

    WrappedComponent.displayName = 'withForm(' + (BaseComponent.displayName || 'Component') + ')';

    return WrappedComponent;
  };
}